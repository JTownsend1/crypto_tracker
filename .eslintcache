[{"/Users/jonathontownsend/Development/crypto_tracker/src/index.js":"1","/Users/jonathontownsend/Development/crypto_tracker/src/reportWebVitals.js":"2","/Users/jonathontownsend/Development/crypto_tracker/src/App.js":"3","/Users/jonathontownsend/Development/crypto_tracker/src/Coin.js":"4","/Users/jonathontownsend/Development/crypto_tracker/src/Homepage.js":"5","/Users/jonathontownsend/Development/crypto_tracker/src/CoinDetail.js":"6","/Users/jonathontownsend/Development/crypto_tracker/src/App2.js":"7","/Users/jonathontownsend/Development/crypto_tracker/src/CoinDetailXXX.js":"8","/Users/jonathontownsend/Development/crypto_tracker/src/CoinDetail1.js":"9"},{"size":327,"mtime":1613661102407,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611426811116,"results":"12","hashOfConfig":"13"},{"size":491,"mtime":1614795770123,"results":"14","hashOfConfig":"11"},{"size":1076,"mtime":1613916436966,"results":"15","hashOfConfig":"11"},{"size":2251,"mtime":1613915181499,"results":"16","hashOfConfig":"11"},{"size":2652,"mtime":1614187831129,"results":"17","hashOfConfig":"13"},{"size":879,"mtime":1613660996748,"results":"18","hashOfConfig":"13"},{"size":1976,"mtime":1614171513272,"results":"19","hashOfConfig":"13"},{"size":5427,"mtime":1614534130014,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"4tac01",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dgj8lm",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":3,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},"/Users/jonathontownsend/Development/crypto_tracker/src/index.js",[],["44","45"],"/Users/jonathontownsend/Development/crypto_tracker/src/reportWebVitals.js",[],"/Users/jonathontownsend/Development/crypto_tracker/src/App.js",["46","47"],"\nimport { Browser, Route, Switch, Redirect, BrowserRouter } from 'react-router-dom';\nimport Homepage from './Homepage.js';\nimport CoinDetail from './CoinDetail1.js';\n\nimport React from 'react'\n\n\nexport default function App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/' render={() => <Homepage />}/>\n          <Route exact path='/Coin-detail/:coinid' render={() => <CoinDetail />}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\n","/Users/jonathontownsend/Development/crypto_tracker/src/Coin.js",[],"/Users/jonathontownsend/Development/crypto_tracker/src/Homepage.js",[],"/Users/jonathontownsend/Development/crypto_tracker/src/CoinDetail.js",["48","49","50","51","52"],"/Users/jonathontownsend/Development/crypto_tracker/src/App2.js",["53"],"import React from 'react'\n\n//\n\nimport useChartConfig from 'hooks/useChartConfig'\nimport Box from 'components/Box'\nimport SyntaxHighlighter from 'components/SyntaxHighlighter'\nimport { Chart } from 'react-charts'\n\nlet sourceCode\n\nexport default () => {\n  const { data, randomizeData } = useChartConfig({\n    series: 10,\n    dataType: 'ordinal'\n  })\n  const series = React.useMemo(\n    () => ({\n      type: 'bar'\n    }),\n    []\n  )\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'ordinal', position: 'left' },\n      { position: 'bottom', type: 'linear', stacked: true }\n    ],\n    []\n  )\n  return (\n    <>\n      <button onClick={randomizeData}>Randomize Data</button>\n      <br />\n      <br />\n      <Box>\n        <Chart data={data} series={series} axes={axes} tooltip />\n      </Box>\n      <br />\n      <SyntaxHighlighter code={sourceCode} />\n    </>\n  )\n}",["54","55"],"/Users/jonathontownsend/Development/crypto_tracker/src/CoinDetailXXX.js",["56","57"],"/Users/jonathontownsend/Development/crypto_tracker/src/CoinDetail1.js",["58","59"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Chart } from 'react-charts'\n// import * as d3 from \"d3\";\n\n// import {line} from \"d3-scale\";\n\n\n// import { curveLinear } from 'react-charts/dist/react-charts.development';\n\n// import Linkify from 'react-linkify';\n// import { Linking } from 'react-native';\n\nimport './CoinDetail.css';\n\nconsole.log(1)\nexport default function CoinDetail() {\n    console.log(2)\n    const [coinArray, setCoinArray] = useState([]);\n    const [coinInfo, setCoinInfo] = useState({});\n    const [coinDescription, setCoinDescription] = useState(\"\");\n\n    const [isLoading, setLoading] = useState(true);\n\n    \n    \n    useEffect(() => {\n        let id = window.location.pathname.split('/')\n        id = id[id.length - 1]\n        console.log(5)\n        axios\n            .get(\n                `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=gbp&days=365&interval=daily`\n                // `https://api.coingecko.com/api/v3/coins/${id}` \n            )\n            .then(res => {\n              \n                setCoinInfo(res.data);\n                setCoinArray(res.data.prices);\n\n                console.log(coinArray);\n                // dateObject.toLocaleString()\n\n                setLoading(false);\n                \n                \n            })\n                .catch(error => console.log(error)); \n\n                \n            }, []);\n            console.log(coinArray);\n            console.log(coinInfo);\n\n\n\n            useEffect(() => {\n                console.log(4)\n                let id = window.location.pathname.split('/')\n                id = id[id.length - 1]\n                console.log(5)\n                axios\n                    .get(\n                        // `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=gbp&days=10&interval=daily`\n                        `https://api.coingecko.com/api/v3/coins/${id}` \n                    )\n                    .then(res => {\n                        setCoinInfo(res.data); \n                \n            \n                        const re1 = /<.+?>/g;\n                       \n\n                        setCoinDescription((res.data.description.en).replace(re1,\"\"));\n               \n                        \n                    })\n                        .catch(error => console.log(error));                \n                    }, []);\n\n                        // coinDescription.replace(\"/<.+?>\",\"NNNNN\");\n                        coinDescription.replace('is','MMMMMMMMMMMMM');\n                    console.log(coinDescription);\n                    // console.log(yes);\n\n  \n\n    const data = React.useMemo(\n        () => [\n          {\n            label: 'Series 1',\n            // data: [[1,2], [2,7], [3,12], [4,3]]\n            // data: [[\"XXxxxx\",3],[\"ddddddd\",4],[\"edede\",5],[\"XXxxxx\",3],[\"ddddddd\",4],[\"edede\",5],[\"XXxxxx\",3],[\"ddddddd\",4],[\"edede\",5],[\"XXxxxx\",3],[\"ddddddd\",4],[\"edede\",5]],\n          data: coinArray,\n          // data: [\n          // { primary: \"xxxxxxxx\", secondary: 10 },\n          // { primary: \"jjjjjjjjjj\", secondary: 12 },\n          // { primary: \"lklklkklklklklk\", secondary: 15 },\n          // ],\n          color: 'rgb(13, 118, 128)',\n          showPoints: false\n          \n          }\n        ],\n       \n      )\n\n      // <text class=\"tickLabel\" dominant-baseline=\"hanging\" text-anchor=\"middle\" style=\"font-family: sans-serif; font-size: 10px; opacity: 1; fill: black; transform: translate3d(0px, 20px, 0px) rotate(45deg);\">February</text>\n     \n    const axes = React.useMemo(\n        () => [\n          { primary: true, type: 'time', position: 'bottom', showGrid: false},\n          \n          { primary: false, type: 'linear', position: 'left', showGrid: true}\n        ],\n        []\n      )\n\n    //   <g class=\"tick\" style=\"transform: translate3d(0px, 0px, 0px);\"><g class=\"labelGroup\"><line class=\"tickline\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"6\" style=\"stroke-width: 1; fill: transparent; opacity: 1; stroke: rgba(0, 0, 0, 0.1);\"></line><text class=\"tickLabel\" dominant-baseline=\"hanging\" text-anchor=\"middle\" style=\"font-family: sans-serif; font-size: 20px; opacity: 1; fill: black; transform: translate3d(0px, 20px, 0px) rotate(30deg);\">August</text></g></g>\n\n    //   const line = d3.line();\n    // const line = d3.line(d => d.date, d => d.value)\n    // .curve(d3.curveCatmullRom.alpha(0.5));\n\n    const series = React.useMemo(\n        () => (\n          { showPoints: false }\n       \n\n        ),\n        []\n        )\n\n    \n\n      if (isLoading) {\n        return <div className=\"App\">Loading...</div>;\n      }\n      \n      return (\n\n        <div className='container'>\n         \n\n            <div className=\"heading\">\n                <h1>{coinInfo.name}</h1>\n            </div>\n\n            <div classname='graph_container'>\n            {/* <div classname='y_label'>\n                  <p>Price in USD</p>\n                </div> */}\n                \n                <div className='graph'>\n                    <Chart axes={axes} series={series} data={data} />\n                </div>\n                {/* <div classname='y_label'>\n                  <p>Price in USD</p>\n                </div> */}\n              {/* <div classname='y_label'>\n                Time\n              </div> */}\n            </div>\n            {}\n            <div className='info'>\n                {coinDescription}\n            </div>\n\n         </div>\n      )\n    }\n\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":17},{"ruleId":"64","severity":1,"message":"68","line":2,"column":34,"nodeType":"66","messageId":"67","endLine":2,"endColumn":42},{"ruleId":"64","severity":1,"message":"69","line":19,"column":12,"nodeType":"66","messageId":"67","endLine":19,"endColumn":19},{"ruleId":"64","severity":1,"message":"70","line":19,"column":21,"nodeType":"66","messageId":"67","endLine":19,"endColumn":29},{"ruleId":"71","severity":2,"message":"72","line":93,"column":26,"nodeType":"66","messageId":"73","endLine":93,"endColumn":30},{"ruleId":"71","severity":2,"message":"74","line":93,"column":40,"nodeType":"66","messageId":"73","endLine":93,"endColumn":46},{"ruleId":"71","severity":2,"message":"75","line":93,"column":54,"nodeType":"66","messageId":"73","endLine":93,"endColumn":58},{"ruleId":null,"fatal":true,"severity":2,"message":"76","line":6,"column":3},{"ruleId":"60","replacedBy":"77"},{"ruleId":"62","replacedBy":"78"},{"ruleId":"64","severity":1,"message":"79","line":4,"column":7,"nodeType":"66","messageId":"67","endLine":4,"endColumn":16},{"ruleId":"64","severity":1,"message":"80","line":49,"column":10,"nodeType":"66","messageId":"67","endLine":49,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":51,"column":16,"nodeType":"83","endLine":51,"endColumn":18,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":88,"column":18,"nodeType":"86","endLine":88,"endColumn":31},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Browser' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'myChart' is assigned a value but never used.","'setChart' is assigned a value but never used.","no-undef","'axes' is not defined.","undef","'series' is not defined.","'data' is not defined.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[36mfunction\u001b[39m \u001b[33mMyChart\u001b[39m() {\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m    \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 | \u001b[39m  \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39museMemo(\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m    () \u001b[33m=>\u001b[39m [\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m      {\u001b[0m\n\u001b[0m \u001b[90m 9 | \u001b[39m        label\u001b[33m:\u001b[39m \u001b[32m'Series 1'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m",["87"],["88"],"'randomInt' is assigned a value but never used.","'chartInstance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'coinArray'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [coinArray]",{"range":"92","text":"93"},[1421,1423],"[coinArray]"]